# The gpg_generate_key function generates a new X.509 (SSL) RSA keypair.
Puppet::Functions.create_function(:x509_generate_key) do
  dispatch :x509_generate_key_defaults do
  end

  dispatch :x509_generate_key_length do
    param 'Integer[0]', :key_length
  end

  dispatch :x509_generate_key_cn do
    param 'String', :cn
  end

  # @param key_length
  # @param uid
  dispatch :x509_generate_key do
    param 'Integer[0]', :key_length
    param 'String', :cn
  end

  # @param options Hash with key_length and/or uid keyset.
  dispatch :gpg_generate_key_with_options do
    param 'Hash', :options
  end

  def default_key_length
    2048
  end
  private :default_key_length

  def default_cn
    'autogenerated.puppet'
  end
  private :default_cn

  def x509_generate_key_defaults
    x509_generate_key
  end

  def x509_generate_key_cn(cn)
    x509_generate_key(default_key_length, cn)
  end

  def x509_generate_key_length(key_length)
    x509_generate_key(key_length, default_cn)
  end

  def gpg_generate_key_with_options(options = {})
    key_length = options.fetch('key_length', default_key_length)
    cn = options.fetch('CN', default_cn)
    x509_generate_key(key_length, cn)
  end

  def x509_generate_key(key_length = default_key_length, cn = default_cn)
    # No need for an extra params sub-hash here.
    output = {
      'CN' => cn,
      'key_length' => key_length,
    }

    Dir.mktmpdir do |dir|
      unless system('openssl', 'genrsa', '-out', "#{dir}/key", key_length.to_s)
        raise Puppet::ParseError, 'Could not generate key'
      end

      unless system('openssl', 'req', '-new', '-subj', "/CN=#{cn}", '-key', "#{dir}/key", '-out', "#{dir}/csr")
        raise Puppet::ParseError, 'Could not generate CSR'
      end

      unless system(
        'openssl', 'x509', '-req', '-days', '3650', '-in', "#{dir}/csr", '-signkey', "#{dir}/key", '-out', "#{dir}/crt"
      )
        raise Puppet::ParseError, 'Could not generate self-signed CRT'
      end
      output['secret_key'] = File.read("#{dir}/key")
      output['cert'] = File.read("#{dir}/crt")
    end
    output
  end
end
